<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AllGamesSaveMessage" xml:space="preserve">
    <value>Informazioni su tutti i giochi salvati nel file {0}</value>
  </data>
  <data name="AskForDataInputMessage" xml:space="preserve">
    <value>Giocatore {0}, inserisci il tuo ID, nome ed età separati da uno spazio</value>
  </data>
  <data name="AskForEnterCommandMessage" xml:space="preserve">
    <value>Inserisci uno dei seguenti comandi:</value>
  </data>
  <data name="AskForPerformCurrentTurnMessage" xml:space="preserve">
    <value>Giocatore {0}, inserisci il numero di riga e di colonna della cella che desideri occupare, separati da uno spazio.</value>
  </data>
  <data name="CurrentTurnPlayerDeclarationMessage" xml:space="preserve">
    <value>Turno giocatore {0}</value>
  </data>
  <data name="DrawMessage" xml:space="preserve">
    <value>Disegno!</value>
  </data>
  <data name="FirstCommandMessage" xml:space="preserve">
    <value>generare un file di revisione dell'ultimo gioco</value>
  </data>
  <data name="FourthCommandMessage" xml:space="preserve">
    <value>vai a fine partita/inizia nuova partita</value>
  </data>
  <data name="GamesWithCurrentPlayersSaveMessage" xml:space="preserve">
    <value>Le informazioni su tutte le partite tra giocatori attuali vengono salvate nel file {0}</value>
  </data>
  <data name="LastGameSaveMessage" xml:space="preserve">
    <value>Le informazioni sull'ultimo gioco sono state salvate correttamente nel file {0}</value>
  </data>
  <data name="NonIntegerAgeMessage" xml:space="preserve">
    <value>La tua età deve essere un numero intero. Per favore riprova</value>
  </data>
  <data name="NonIntegerIdMessage" xml:space="preserve">
    <value>Il tuo ID deve essere un numero intero. Per favore riprova</value>
  </data>
  <data name="RepeatConfirmMessage" xml:space="preserve">
    <value>Vuoi giocare di nuovo? (Invio - sì, qualsiasi altra chiave - no)</value>
  </data>
  <data name="SaveToFileErrorMessage" xml:space="preserve">
    <value>Si è verificato un errore durante la scrittura dei dati nel file</value>
  </data>
  <data name="SecondCommandMessage" xml:space="preserve">
    <value>generare un file con una panoramica delle partite dei giocatori attuali</value>
  </data>
  <data name="SelectLanguageMessage" xml:space="preserve">
    <value>Inserisci una delle combinazioni di caratteri suggerite per selezionare la lingua</value>
  </data>
  <data name="SelectLanguageRetryMessage" xml:space="preserve">
    <value>Hai inserito la combinazione di caratteri sbagliata. Riprova</value>
  </data>
  <data name="ThirdCommandMessage" xml:space="preserve">
    <value>genera un file di panoramica di tutti i giochi</value>
  </data>
  <data name="WinnerDeclarationMessage" xml:space="preserve">
    <value>Il giocatore {0} ha vinto!</value>
  </data>
  <data name="WrongAgeMessage" xml:space="preserve">
    <value>La tua età deve essere maggiore di {0} e inferiore a {1} anni</value>
  </data>
  <data name="WrongCellMessage" xml:space="preserve">
    <value>Hai inserito i dati nel formato sbagliato oppure la cella che volevi occupare è già occupata. Rimangono {0} tentativi prima che il turno passi all'avversario</value>
  </data>
  <data name="WrongCommandMessage" xml:space="preserve">
    <value>Hai inserito un comando non valido</value>
  </data>
  <data name="WrongInputFormatMessage" xml:space="preserve">
    <value>Il tuo formato di input non è corretto. Per favore riprova</value>
  </data>
  <data name="WrongNameLengthMessage" xml:space="preserve">
    <value>Il tuo nome non deve essere vuoto e la sua lunghezza non può superare {0} caratteri.</value>
  </data>
</root>