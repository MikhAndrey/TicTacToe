<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AllGamesSaveMessage" xml:space="preserve">
    <value>ファイル {0} に保存されたすべてのゲームに関する情報</value>
  </data>
  <data name="AskForDataInputMessage" xml:space="preserve">
    <value>プレーヤー {0}、ID、名前、年齢をスペースで区切って入力してください</value>
  </data>
  <data name="AskForEnterCommandMessage" xml:space="preserve">
    <value>次のいずれかのコマンドを入力してください。</value>
  </data>
  <data name="AskForPerformCurrentTurnMessage" xml:space="preserve">
    <value>プレーヤー {0}、占有したいセルの行番号と列番号をスペースで区切って入力してください。</value>
  </data>
  <data name="BookedIdErrorMessage" xml:space="preserve">
    <value>この ID は既に使用されています。 再試行</value>
  </data>
  <data name="CurrentTurnPlayerDeclarationMessage" xml:space="preserve">
    <value>プレーヤー ターン {0}</value>
  </data>
  <data name="DrawMessage" xml:space="preserve">
    <value>描く！</value>
  </data>
  <data name="FirstCommandMessage" xml:space="preserve">
    <value>最新ゲームのレビューファイルを生成する</value>
  </data>
  <data name="FourthCommandMessage" xml:space="preserve">
    <value>ゲームを終了する/新しいゲームを開始する</value>
  </data>
  <data name="GamesWithCurrentPlayersSaveMessage" xml:space="preserve">
    <value>現在のプレーヤー間のすべてのゲームに関する情報は、ファイル {0} に保存されます</value>
  </data>
  <data name="LanguagesNames" xml:space="preserve">
    <value>ロシア語 英語 フランス語 ドイツ語 スペイン語 イタリア語 オランダ語 ポルトガル語 アラビア語 中国語 日本語</value>
  </data>
  <data name="LastGameSaveMessage" xml:space="preserve">
    <value>前回のゲームに関する情報がファイル {0} に正常に保存されました</value>
  </data>
  <data name="NonIntegerAgeMessage" xml:space="preserve">
    <value>年齢は整数でなければなりません。もう一度お試しください</value>
  </data>
  <data name="NonIntegerIdMessage" xml:space="preserve">
    <value>ID は整数でなければなりません。もう一度お試しください</value>
  </data>
  <data name="RepeatConfirmMessage" xml:space="preserve">
    <value>また遊びたいですか？ (Enter - はい、その他のキー - いいえ)</value>
  </data>
  <data name="SaveToFileErrorMessage" xml:space="preserve">
    <value>ファイルへのデータの書き込み中にエラーが発生しました</value>
  </data>
  <data name="SecondCommandMessage" xml:space="preserve">
    <value>現在のプレーヤーのゲームの概要を含むファイルを生成する</value>
  </data>
  <data name="SelectLanguageMessage" xml:space="preserve">
    <value>言語を選択するには、提案された文字の組み合わせのいずれかを入力してください</value>
  </data>
  <data name="SelectLanguageRetryMessage" xml:space="preserve">
    <value>入力した文字の組み合わせが間違っています。 再試行</value>
  </data>
  <data name="ThirdCommandMessage" xml:space="preserve">
    <value>すべてのゲームの概要ファイルを生成する</value>
  </data>
  <data name="WinnerDeclarationMessage" xml:space="preserve">
    <value>プレーヤー {0} が勝ちました!</value>
  </data>
  <data name="WrongAgeMessage" xml:space="preserve">
    <value>年齢は {0} 歳以上 {1} 歳未満でなければなりません</value>
  </data>
  <data name="WrongCellMessage" xml:space="preserve">
    <value>間違った形式でデータを入力したか、占有しようとしたセルが既に占有されています。対戦相手にターンが移るまであと {0} 回の試行があります</value>
  </data>
  <data name="WrongCommandMessage" xml:space="preserve">
    <value>無効なコマンドを入力しました</value>
  </data>
  <data name="WrongInputFormatMessage" xml:space="preserve">
    <value>入力形式が正しくありません。もう一度お試しください</value>
  </data>
  <data name="WrongNameLengthMessage" xml:space="preserve">
    <value>あなたの名前は空であってはならず、その長さは {0} 文字を超えることはできません。</value>
  </data>
</root>