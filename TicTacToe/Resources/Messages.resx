<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AllGamesSaveMessage" xml:space="preserve">
    <value>Information about all games saved to file {0}</value>
  </data>
  <data name="AskForDataInputMessage" xml:space="preserve">
    <value>Player {0}, enter your id, name and age, separated by space</value>
  </data>
  <data name="AskForEnterCommandMessage" xml:space="preserve">
    <value>Please enter one of the following commands:</value>
  </data>
  <data name="AskForPerformCurrentTurnMessage" xml:space="preserve">
    <value>Player {0}, enter the row number and column number of the cell you would like to occupy, separated by a space</value>
  </data>
  <data name="BookedIdErrorMessage" xml:space="preserve">
    <value>This ID is already taken. Try again</value>
  </data>
  <data name="CurrentTurnPlayerDeclarationMessage" xml:space="preserve">
    <value>Player {0}'s turn</value>
  </data>
  <data name="DrawMessage" xml:space="preserve">
    <value>Draw!</value>
  </data>
  <data name="FirstCommandMessage" xml:space="preserve">
    <value>generate file with last game's review</value>
  </data>
  <data name="FourthCommandMessage" xml:space="preserve">
    <value>go to the choice between ending the game and starting a new game</value>
  </data>
  <data name="GameGetConnectionErrorMessage" xml:space="preserve">
    <value>An error occurred while connecting to the database. Unable to get game data</value>
  </data>
  <data name="GameSetConnectionErrorMessage" xml:space="preserve">
    <value>An error occurred while connecting to the database. Unable to write game data</value>
  </data>
  <data name="GamesWithCurrentPlayersSaveMessage" xml:space="preserve">
    <value>Information about all games between current players is saved to file {0}</value>
  </data>
  <data name="LanguagesNames" xml:space="preserve">
    <value>Russian English</value>
  </data>
  <data name="LastGameSaveMessage" xml:space="preserve">
    <value>Information about the last game was successfully saved to the file {0}</value>
  </data>
  <data name="NonIntegerAgeMessage" xml:space="preserve">
    <value>Your age must be an integer. Please, try again</value>
  </data>
  <data name="NonIntegerIdMessage" xml:space="preserve">
    <value>Your id must be an integer. Please, try again</value>
  </data>
  <data name="PlayerConnectionErrorMessage" xml:space="preserve">
    <value>An error occurred while connecting to the database. Unable to write player data</value>
  </data>
  <data name="RepeatConfirmMessage" xml:space="preserve">
    <value>Do you want to play again? (Enter - yes, any other key - no)</value>
  </data>
  <data name="SaveToFileErrorMessage" xml:space="preserve">
    <value>An error occurred while writing data to file</value>
  </data>
  <data name="SecondCommandMessage" xml:space="preserve">
    <value>generate file with current players games review</value>
  </data>
  <data name="SelectLanguageMessage" xml:space="preserve">
    <value>Please enter one of the suggested character combinations to select the language</value>
  </data>
  <data name="SelectLanguageRetryMessage" xml:space="preserve">
    <value>You have entered the wrong combination of characters. Try again</value>
  </data>
  <data name="ThirdCommandMessage" xml:space="preserve">
    <value>generate file with all games review</value>
  </data>
  <data name="WinnerDeclarationMessage" xml:space="preserve">
    <value>Player {0} won!</value>
  </data>
  <data name="WrongAgeMessage" xml:space="preserve">
    <value>Your age must be greater than {0} and less than {1} years</value>
  </data>
  <data name="WrongCellMessage" xml:space="preserve">
    <value>You entered the data in the wrong format or the cell you wanted to occupy is already occupied. There are {0} attempts left before the move goes to the opponent</value>
  </data>
  <data name="WrongCommandMessage" xml:space="preserve">
    <value>You have entered the wrong command</value>
  </data>
  <data name="WrongInputFormatMessage" xml:space="preserve">
    <value>Your input's format is wrong. Please, try again</value>
  </data>
  <data name="WrongNameLengthMessage" xml:space="preserve">
    <value>Your name shouldn't be empty and its length can't exceed {0} symbols</value>
  </data>
</root>